from typing import overload
from misc import L0, L1, L2, L3, L4, L5, L6, L7, L8, L9, Digit

@overload
def adc1(x: L0, y: L0, c: L0) -> tuple[L0, L0]: ...
@overload
def adc1(x: L0, y: L0, c: L1) -> tuple[L1, L0]: ...
@overload
def adc1(x: L0, y: L1, c: L0) -> tuple[L1, L0]: ...
@overload
def adc1(x: L0, y: L1, c: L1) -> tuple[L2, L0]: ...
@overload
def adc1(x: L0, y: L2, c: L0) -> tuple[L2, L0]: ...
@overload
def adc1(x: L0, y: L2, c: L1) -> tuple[L3, L0]: ...
@overload
def adc1(x: L0, y: L3, c: L0) -> tuple[L3, L0]: ...
@overload
def adc1(x: L0, y: L3, c: L1) -> tuple[L4, L0]: ...
@overload
def adc1(x: L0, y: L4, c: L0) -> tuple[L4, L0]: ...
@overload
def adc1(x: L0, y: L4, c: L1) -> tuple[L5, L0]: ...
@overload
def adc1(x: L0, y: L5, c: L0) -> tuple[L5, L0]: ...
@overload
def adc1(x: L0, y: L5, c: L1) -> tuple[L6, L0]: ...
@overload
def adc1(x: L0, y: L6, c: L0) -> tuple[L6, L0]: ...
@overload
def adc1(x: L0, y: L6, c: L1) -> tuple[L7, L0]: ...
@overload
def adc1(x: L0, y: L7, c: L0) -> tuple[L7, L0]: ...
@overload
def adc1(x: L0, y: L7, c: L1) -> tuple[L8, L0]: ...
@overload
def adc1(x: L0, y: L8, c: L0) -> tuple[L8, L0]: ...
@overload
def adc1(x: L0, y: L8, c: L1) -> tuple[L9, L0]: ...
@overload
def adc1(x: L0, y: L9, c: L0) -> tuple[L9, L0]: ...
@overload
def adc1(x: L0, y: L9, c: L1) -> tuple[L0, L1]: ...
@overload
def adc1(x: L1, y: L0, c: L0) -> tuple[L1, L0]: ...
@overload
def adc1(x: L1, y: L0, c: L1) -> tuple[L2, L0]: ...
@overload
def adc1(x: L1, y: L1, c: L0) -> tuple[L2, L0]: ...
@overload
def adc1(x: L1, y: L1, c: L1) -> tuple[L3, L0]: ...
@overload
def adc1(x: L1, y: L2, c: L0) -> tuple[L3, L0]: ...
@overload
def adc1(x: L1, y: L2, c: L1) -> tuple[L4, L0]: ...
@overload
def adc1(x: L1, y: L3, c: L0) -> tuple[L4, L0]: ...
@overload
def adc1(x: L1, y: L3, c: L1) -> tuple[L5, L0]: ...
@overload
def adc1(x: L1, y: L4, c: L0) -> tuple[L5, L0]: ...
@overload
def adc1(x: L1, y: L4, c: L1) -> tuple[L6, L0]: ...
@overload
def adc1(x: L1, y: L5, c: L0) -> tuple[L6, L0]: ...
@overload
def adc1(x: L1, y: L5, c: L1) -> tuple[L7, L0]: ...
@overload
def adc1(x: L1, y: L6, c: L0) -> tuple[L7, L0]: ...
@overload
def adc1(x: L1, y: L6, c: L1) -> tuple[L8, L0]: ...
@overload
def adc1(x: L1, y: L7, c: L0) -> tuple[L8, L0]: ...
@overload
def adc1(x: L1, y: L7, c: L1) -> tuple[L9, L0]: ...
@overload
def adc1(x: L1, y: L8, c: L0) -> tuple[L9, L0]: ...
@overload
def adc1(x: L1, y: L8, c: L1) -> tuple[L0, L1]: ...
@overload
def adc1(x: L1, y: L9, c: L0) -> tuple[L0, L1]: ...
@overload
def adc1(x: L1, y: L9, c: L1) -> tuple[L1, L1]: ...
@overload
def adc1(x: L2, y: L0, c: L0) -> tuple[L2, L0]: ...
@overload
def adc1(x: L2, y: L0, c: L1) -> tuple[L3, L0]: ...
@overload
def adc1(x: L2, y: L1, c: L0) -> tuple[L3, L0]: ...
@overload
def adc1(x: L2, y: L1, c: L1) -> tuple[L4, L0]: ...
@overload
def adc1(x: L2, y: L2, c: L0) -> tuple[L4, L0]: ...
@overload
def adc1(x: L2, y: L2, c: L1) -> tuple[L5, L0]: ...
@overload
def adc1(x: L2, y: L3, c: L0) -> tuple[L5, L0]: ...
@overload
def adc1(x: L2, y: L3, c: L1) -> tuple[L6, L0]: ...
@overload
def adc1(x: L2, y: L4, c: L0) -> tuple[L6, L0]: ...
@overload
def adc1(x: L2, y: L4, c: L1) -> tuple[L7, L0]: ...
@overload
def adc1(x: L2, y: L5, c: L0) -> tuple[L7, L0]: ...
@overload
def adc1(x: L2, y: L5, c: L1) -> tuple[L8, L0]: ...
@overload
def adc1(x: L2, y: L6, c: L0) -> tuple[L8, L0]: ...
@overload
def adc1(x: L2, y: L6, c: L1) -> tuple[L9, L0]: ...
@overload
def adc1(x: L2, y: L7, c: L0) -> tuple[L9, L0]: ...
@overload
def adc1(x: L2, y: L7, c: L1) -> tuple[L0, L1]: ...
@overload
def adc1(x: L2, y: L8, c: L0) -> tuple[L0, L1]: ...
@overload
def adc1(x: L2, y: L8, c: L1) -> tuple[L1, L1]: ...
@overload
def adc1(x: L2, y: L9, c: L0) -> tuple[L1, L1]: ...
@overload
def adc1(x: L2, y: L9, c: L1) -> tuple[L2, L1]: ...
@overload
def adc1(x: L3, y: L0, c: L0) -> tuple[L3, L0]: ...
@overload
def adc1(x: L3, y: L0, c: L1) -> tuple[L4, L0]: ...
@overload
def adc1(x: L3, y: L1, c: L0) -> tuple[L4, L0]: ...
@overload
def adc1(x: L3, y: L1, c: L1) -> tuple[L5, L0]: ...
@overload
def adc1(x: L3, y: L2, c: L0) -> tuple[L5, L0]: ...
@overload
def adc1(x: L3, y: L2, c: L1) -> tuple[L6, L0]: ...
@overload
def adc1(x: L3, y: L3, c: L0) -> tuple[L6, L0]: ...
@overload
def adc1(x: L3, y: L3, c: L1) -> tuple[L7, L0]: ...
@overload
def adc1(x: L3, y: L4, c: L0) -> tuple[L7, L0]: ...
@overload
def adc1(x: L3, y: L4, c: L1) -> tuple[L8, L0]: ...
@overload
def adc1(x: L3, y: L5, c: L0) -> tuple[L8, L0]: ...
@overload
def adc1(x: L3, y: L5, c: L1) -> tuple[L9, L0]: ...
@overload
def adc1(x: L3, y: L6, c: L0) -> tuple[L9, L0]: ...
@overload
def adc1(x: L3, y: L6, c: L1) -> tuple[L0, L1]: ...
@overload
def adc1(x: L3, y: L7, c: L0) -> tuple[L0, L1]: ...
@overload
def adc1(x: L3, y: L7, c: L1) -> tuple[L1, L1]: ...
@overload
def adc1(x: L3, y: L8, c: L0) -> tuple[L1, L1]: ...
@overload
def adc1(x: L3, y: L8, c: L1) -> tuple[L2, L1]: ...
@overload
def adc1(x: L3, y: L9, c: L0) -> tuple[L2, L1]: ...
@overload
def adc1(x: L3, y: L9, c: L1) -> tuple[L3, L1]: ...
@overload
def adc1(x: L4, y: L0, c: L0) -> tuple[L4, L0]: ...
@overload
def adc1(x: L4, y: L0, c: L1) -> tuple[L5, L0]: ...
@overload
def adc1(x: L4, y: L1, c: L0) -> tuple[L5, L0]: ...
@overload
def adc1(x: L4, y: L1, c: L1) -> tuple[L6, L0]: ...
@overload
def adc1(x: L4, y: L2, c: L0) -> tuple[L6, L0]: ...
@overload
def adc1(x: L4, y: L2, c: L1) -> tuple[L7, L0]: ...
@overload
def adc1(x: L4, y: L3, c: L0) -> tuple[L7, L0]: ...
@overload
def adc1(x: L4, y: L3, c: L1) -> tuple[L8, L0]: ...
@overload
def adc1(x: L4, y: L4, c: L0) -> tuple[L8, L0]: ...
@overload
def adc1(x: L4, y: L4, c: L1) -> tuple[L9, L0]: ...
@overload
def adc1(x: L4, y: L5, c: L0) -> tuple[L9, L0]: ...
@overload
def adc1(x: L4, y: L5, c: L1) -> tuple[L0, L1]: ...
@overload
def adc1(x: L4, y: L6, c: L0) -> tuple[L0, L1]: ...
@overload
def adc1(x: L4, y: L6, c: L1) -> tuple[L1, L1]: ...
@overload
def adc1(x: L4, y: L7, c: L0) -> tuple[L1, L1]: ...
@overload
def adc1(x: L4, y: L7, c: L1) -> tuple[L2, L1]: ...
@overload
def adc1(x: L4, y: L8, c: L0) -> tuple[L2, L1]: ...
@overload
def adc1(x: L4, y: L8, c: L1) -> tuple[L3, L1]: ...
@overload
def adc1(x: L4, y: L9, c: L0) -> tuple[L3, L1]: ...
@overload
def adc1(x: L4, y: L9, c: L1) -> tuple[L4, L1]: ...
@overload
def adc1(x: L5, y: L0, c: L0) -> tuple[L5, L0]: ...
@overload
def adc1(x: L5, y: L0, c: L1) -> tuple[L6, L0]: ...
@overload
def adc1(x: L5, y: L1, c: L0) -> tuple[L6, L0]: ...
@overload
def adc1(x: L5, y: L1, c: L1) -> tuple[L7, L0]: ...
@overload
def adc1(x: L5, y: L2, c: L0) -> tuple[L7, L0]: ...
@overload
def adc1(x: L5, y: L2, c: L1) -> tuple[L8, L0]: ...
@overload
def adc1(x: L5, y: L3, c: L0) -> tuple[L8, L0]: ...
@overload
def adc1(x: L5, y: L3, c: L1) -> tuple[L9, L0]: ...
@overload
def adc1(x: L5, y: L4, c: L0) -> tuple[L9, L0]: ...
@overload
def adc1(x: L5, y: L4, c: L1) -> tuple[L0, L1]: ...
@overload
def adc1(x: L5, y: L5, c: L0) -> tuple[L0, L1]: ...
@overload
def adc1(x: L5, y: L5, c: L1) -> tuple[L1, L1]: ...
@overload
def adc1(x: L5, y: L6, c: L0) -> tuple[L1, L1]: ...
@overload
def adc1(x: L5, y: L6, c: L1) -> tuple[L2, L1]: ...
@overload
def adc1(x: L5, y: L7, c: L0) -> tuple[L2, L1]: ...
@overload
def adc1(x: L5, y: L7, c: L1) -> tuple[L3, L1]: ...
@overload
def adc1(x: L5, y: L8, c: L0) -> tuple[L3, L1]: ...
@overload
def adc1(x: L5, y: L8, c: L1) -> tuple[L4, L1]: ...
@overload
def adc1(x: L5, y: L9, c: L0) -> tuple[L4, L1]: ...
@overload
def adc1(x: L5, y: L9, c: L1) -> tuple[L5, L1]: ...
@overload
def adc1(x: L6, y: L0, c: L0) -> tuple[L6, L0]: ...
@overload
def adc1(x: L6, y: L0, c: L1) -> tuple[L7, L0]: ...
@overload
def adc1(x: L6, y: L1, c: L0) -> tuple[L7, L0]: ...
@overload
def adc1(x: L6, y: L1, c: L1) -> tuple[L8, L0]: ...
@overload
def adc1(x: L6, y: L2, c: L0) -> tuple[L8, L0]: ...
@overload
def adc1(x: L6, y: L2, c: L1) -> tuple[L9, L0]: ...
@overload
def adc1(x: L6, y: L3, c: L0) -> tuple[L9, L0]: ...
@overload
def adc1(x: L6, y: L3, c: L1) -> tuple[L0, L1]: ...
@overload
def adc1(x: L6, y: L4, c: L0) -> tuple[L0, L1]: ...
@overload
def adc1(x: L6, y: L4, c: L1) -> tuple[L1, L1]: ...
@overload
def adc1(x: L6, y: L5, c: L0) -> tuple[L1, L1]: ...
@overload
def adc1(x: L6, y: L5, c: L1) -> tuple[L2, L1]: ...
@overload
def adc1(x: L6, y: L6, c: L0) -> tuple[L2, L1]: ...
@overload
def adc1(x: L6, y: L6, c: L1) -> tuple[L3, L1]: ...
@overload
def adc1(x: L6, y: L7, c: L0) -> tuple[L3, L1]: ...
@overload
def adc1(x: L6, y: L7, c: L1) -> tuple[L4, L1]: ...
@overload
def adc1(x: L6, y: L8, c: L0) -> tuple[L4, L1]: ...
@overload
def adc1(x: L6, y: L8, c: L1) -> tuple[L5, L1]: ...
@overload
def adc1(x: L6, y: L9, c: L0) -> tuple[L5, L1]: ...
@overload
def adc1(x: L6, y: L9, c: L1) -> tuple[L6, L1]: ...
@overload
def adc1(x: L7, y: L0, c: L0) -> tuple[L7, L0]: ...
@overload
def adc1(x: L7, y: L0, c: L1) -> tuple[L8, L0]: ...
@overload
def adc1(x: L7, y: L1, c: L0) -> tuple[L8, L0]: ...
@overload
def adc1(x: L7, y: L1, c: L1) -> tuple[L9, L0]: ...
@overload
def adc1(x: L7, y: L2, c: L0) -> tuple[L9, L0]: ...
@overload
def adc1(x: L7, y: L2, c: L1) -> tuple[L0, L1]: ...
@overload
def adc1(x: L7, y: L3, c: L0) -> tuple[L0, L1]: ...
@overload
def adc1(x: L7, y: L3, c: L1) -> tuple[L1, L1]: ...
@overload
def adc1(x: L7, y: L4, c: L0) -> tuple[L1, L1]: ...
@overload
def adc1(x: L7, y: L4, c: L1) -> tuple[L2, L1]: ...
@overload
def adc1(x: L7, y: L5, c: L0) -> tuple[L2, L1]: ...
@overload
def adc1(x: L7, y: L5, c: L1) -> tuple[L3, L1]: ...
@overload
def adc1(x: L7, y: L6, c: L0) -> tuple[L3, L1]: ...
@overload
def adc1(x: L7, y: L6, c: L1) -> tuple[L4, L1]: ...
@overload
def adc1(x: L7, y: L7, c: L0) -> tuple[L4, L1]: ...
@overload
def adc1(x: L7, y: L7, c: L1) -> tuple[L5, L1]: ...
@overload
def adc1(x: L7, y: L8, c: L0) -> tuple[L5, L1]: ...
@overload
def adc1(x: L7, y: L8, c: L1) -> tuple[L6, L1]: ...
@overload
def adc1(x: L7, y: L9, c: L0) -> tuple[L6, L1]: ...
@overload
def adc1(x: L7, y: L9, c: L1) -> tuple[L7, L1]: ...
@overload
def adc1(x: L8, y: L0, c: L0) -> tuple[L8, L0]: ...
@overload
def adc1(x: L8, y: L0, c: L1) -> tuple[L9, L0]: ...
@overload
def adc1(x: L8, y: L1, c: L0) -> tuple[L9, L0]: ...
@overload
def adc1(x: L8, y: L1, c: L1) -> tuple[L0, L1]: ...
@overload
def adc1(x: L8, y: L2, c: L0) -> tuple[L0, L1]: ...
@overload
def adc1(x: L8, y: L2, c: L1) -> tuple[L1, L1]: ...
@overload
def adc1(x: L8, y: L3, c: L0) -> tuple[L1, L1]: ...
@overload
def adc1(x: L8, y: L3, c: L1) -> tuple[L2, L1]: ...
@overload
def adc1(x: L8, y: L4, c: L0) -> tuple[L2, L1]: ...
@overload
def adc1(x: L8, y: L4, c: L1) -> tuple[L3, L1]: ...
@overload
def adc1(x: L8, y: L5, c: L0) -> tuple[L3, L1]: ...
@overload
def adc1(x: L8, y: L5, c: L1) -> tuple[L4, L1]: ...
@overload
def adc1(x: L8, y: L6, c: L0) -> tuple[L4, L1]: ...
@overload
def adc1(x: L8, y: L6, c: L1) -> tuple[L5, L1]: ...
@overload
def adc1(x: L8, y: L7, c: L0) -> tuple[L5, L1]: ...
@overload
def adc1(x: L8, y: L7, c: L1) -> tuple[L6, L1]: ...
@overload
def adc1(x: L8, y: L8, c: L0) -> tuple[L6, L1]: ...
@overload
def adc1(x: L8, y: L8, c: L1) -> tuple[L7, L1]: ...
@overload
def adc1(x: L8, y: L9, c: L0) -> tuple[L7, L1]: ...
@overload
def adc1(x: L8, y: L9, c: L1) -> tuple[L8, L1]: ...
@overload
def adc1(x: L9, y: L0, c: L0) -> tuple[L9, L0]: ...
@overload
def adc1(x: L9, y: L0, c: L1) -> tuple[L0, L1]: ...
@overload
def adc1(x: L9, y: L1, c: L0) -> tuple[L0, L1]: ...
@overload
def adc1(x: L9, y: L1, c: L1) -> tuple[L1, L1]: ...
@overload
def adc1(x: L9, y: L2, c: L0) -> tuple[L1, L1]: ...
@overload
def adc1(x: L9, y: L2, c: L1) -> tuple[L2, L1]: ...
@overload
def adc1(x: L9, y: L3, c: L0) -> tuple[L2, L1]: ...
@overload
def adc1(x: L9, y: L3, c: L1) -> tuple[L3, L1]: ...
@overload
def adc1(x: L9, y: L4, c: L0) -> tuple[L3, L1]: ...
@overload
def adc1(x: L9, y: L4, c: L1) -> tuple[L4, L1]: ...
@overload
def adc1(x: L9, y: L5, c: L0) -> tuple[L4, L1]: ...
@overload
def adc1(x: L9, y: L5, c: L1) -> tuple[L5, L1]: ...
@overload
def adc1(x: L9, y: L6, c: L0) -> tuple[L5, L1]: ...
@overload
def adc1(x: L9, y: L6, c: L1) -> tuple[L6, L1]: ...
@overload
def adc1(x: L9, y: L7, c: L0) -> tuple[L6, L1]: ...
@overload
def adc1(x: L9, y: L7, c: L1) -> tuple[L7, L1]: ...
@overload
def adc1(x: L9, y: L8, c: L0) -> tuple[L7, L1]: ...
@overload
def adc1(x: L9, y: L8, c: L1) -> tuple[L8, L1]: ...
@overload
def adc1(x: L9, y: L9, c: L0) -> tuple[L8, L1]: ...
@overload
def adc1(x: L9, y: L9, c: L1) -> tuple[L9, L1]: ...
def adc1(x: Digit, y: Digit, c: L0 | L1) -> tuple[Digit, L0 | L1]: ...

# ----------------------

@overload
def sbb1(x: L0, y: L0, b: L0) -> tuple[L0, L0]: ...
@overload
def sbb1(x: L0, y: L0, b: L1) -> tuple[L9, L1]: ...
@overload
def sbb1(x: L0, y: L1, b: L0) -> tuple[L9, L1]: ...
@overload
def sbb1(x: L0, y: L1, b: L1) -> tuple[L8, L1]: ...
@overload
def sbb1(x: L0, y: L2, b: L0) -> tuple[L8, L1]: ...
@overload
def sbb1(x: L0, y: L2, b: L1) -> tuple[L7, L1]: ...
@overload
def sbb1(x: L0, y: L3, b: L0) -> tuple[L7, L1]: ...
@overload
def sbb1(x: L0, y: L3, b: L1) -> tuple[L6, L1]: ...
@overload
def sbb1(x: L0, y: L4, b: L0) -> tuple[L6, L1]: ...
@overload
def sbb1(x: L0, y: L4, b: L1) -> tuple[L5, L1]: ...
@overload
def sbb1(x: L0, y: L5, b: L0) -> tuple[L5, L1]: ...
@overload
def sbb1(x: L0, y: L5, b: L1) -> tuple[L4, L1]: ...
@overload
def sbb1(x: L0, y: L6, b: L0) -> tuple[L4, L1]: ...
@overload
def sbb1(x: L0, y: L6, b: L1) -> tuple[L3, L1]: ...
@overload
def sbb1(x: L0, y: L7, b: L0) -> tuple[L3, L1]: ...
@overload
def sbb1(x: L0, y: L7, b: L1) -> tuple[L2, L1]: ...
@overload
def sbb1(x: L0, y: L8, b: L0) -> tuple[L2, L1]: ...
@overload
def sbb1(x: L0, y: L8, b: L1) -> tuple[L1, L1]: ...
@overload
def sbb1(x: L0, y: L9, b: L0) -> tuple[L1, L1]: ...
@overload
def sbb1(x: L0, y: L9, b: L1) -> tuple[L0, L1]: ...
@overload
def sbb1(x: L1, y: L0, b: L0) -> tuple[L1, L0]: ...
@overload
def sbb1(x: L1, y: L0, b: L1) -> tuple[L0, L0]: ...
@overload
def sbb1(x: L1, y: L1, b: L0) -> tuple[L0, L0]: ...
@overload
def sbb1(x: L1, y: L1, b: L1) -> tuple[L9, L1]: ...
@overload
def sbb1(x: L1, y: L2, b: L0) -> tuple[L9, L1]: ...
@overload
def sbb1(x: L1, y: L2, b: L1) -> tuple[L8, L1]: ...
@overload
def sbb1(x: L1, y: L3, b: L0) -> tuple[L8, L1]: ...
@overload
def sbb1(x: L1, y: L3, b: L1) -> tuple[L7, L1]: ...
@overload
def sbb1(x: L1, y: L4, b: L0) -> tuple[L7, L1]: ...
@overload
def sbb1(x: L1, y: L4, b: L1) -> tuple[L6, L1]: ...
@overload
def sbb1(x: L1, y: L5, b: L0) -> tuple[L6, L1]: ...
@overload
def sbb1(x: L1, y: L5, b: L1) -> tuple[L5, L1]: ...
@overload
def sbb1(x: L1, y: L6, b: L0) -> tuple[L5, L1]: ...
@overload
def sbb1(x: L1, y: L6, b: L1) -> tuple[L4, L1]: ...
@overload
def sbb1(x: L1, y: L7, b: L0) -> tuple[L4, L1]: ...
@overload
def sbb1(x: L1, y: L7, b: L1) -> tuple[L3, L1]: ...
@overload
def sbb1(x: L1, y: L8, b: L0) -> tuple[L3, L1]: ...
@overload
def sbb1(x: L1, y: L8, b: L1) -> tuple[L2, L1]: ...
@overload
def sbb1(x: L1, y: L9, b: L0) -> tuple[L2, L1]: ...
@overload
def sbb1(x: L1, y: L9, b: L1) -> tuple[L1, L1]: ...
@overload
def sbb1(x: L2, y: L0, b: L0) -> tuple[L2, L0]: ...
@overload
def sbb1(x: L2, y: L0, b: L1) -> tuple[L1, L0]: ...
@overload
def sbb1(x: L2, y: L1, b: L0) -> tuple[L1, L0]: ...
@overload
def sbb1(x: L2, y: L1, b: L1) -> tuple[L0, L0]: ...
@overload
def sbb1(x: L2, y: L2, b: L0) -> tuple[L0, L0]: ...
@overload
def sbb1(x: L2, y: L2, b: L1) -> tuple[L9, L1]: ...
@overload
def sbb1(x: L2, y: L3, b: L0) -> tuple[L9, L1]: ...
@overload
def sbb1(x: L2, y: L3, b: L1) -> tuple[L8, L1]: ...
@overload
def sbb1(x: L2, y: L4, b: L0) -> tuple[L8, L1]: ...
@overload
def sbb1(x: L2, y: L4, b: L1) -> tuple[L7, L1]: ...
@overload
def sbb1(x: L2, y: L5, b: L0) -> tuple[L7, L1]: ...
@overload
def sbb1(x: L2, y: L5, b: L1) -> tuple[L6, L1]: ...
@overload
def sbb1(x: L2, y: L6, b: L0) -> tuple[L6, L1]: ...
@overload
def sbb1(x: L2, y: L6, b: L1) -> tuple[L5, L1]: ...
@overload
def sbb1(x: L2, y: L7, b: L0) -> tuple[L5, L1]: ...
@overload
def sbb1(x: L2, y: L7, b: L1) -> tuple[L4, L1]: ...
@overload
def sbb1(x: L2, y: L8, b: L0) -> tuple[L4, L1]: ...
@overload
def sbb1(x: L2, y: L8, b: L1) -> tuple[L3, L1]: ...
@overload
def sbb1(x: L2, y: L9, b: L0) -> tuple[L3, L1]: ...
@overload
def sbb1(x: L2, y: L9, b: L1) -> tuple[L2, L1]: ...
@overload
def sbb1(x: L3, y: L0, b: L0) -> tuple[L3, L0]: ...
@overload
def sbb1(x: L3, y: L0, b: L1) -> tuple[L2, L0]: ...
@overload
def sbb1(x: L3, y: L1, b: L0) -> tuple[L2, L0]: ...
@overload
def sbb1(x: L3, y: L1, b: L1) -> tuple[L1, L0]: ...
@overload
def sbb1(x: L3, y: L2, b: L0) -> tuple[L1, L0]: ...
@overload
def sbb1(x: L3, y: L2, b: L1) -> tuple[L0, L0]: ...
@overload
def sbb1(x: L3, y: L3, b: L0) -> tuple[L0, L0]: ...
@overload
def sbb1(x: L3, y: L3, b: L1) -> tuple[L9, L1]: ...
@overload
def sbb1(x: L3, y: L4, b: L0) -> tuple[L9, L1]: ...
@overload
def sbb1(x: L3, y: L4, b: L1) -> tuple[L8, L1]: ...
@overload
def sbb1(x: L3, y: L5, b: L0) -> tuple[L8, L1]: ...
@overload
def sbb1(x: L3, y: L5, b: L1) -> tuple[L7, L1]: ...
@overload
def sbb1(x: L3, y: L6, b: L0) -> tuple[L7, L1]: ...
@overload
def sbb1(x: L3, y: L6, b: L1) -> tuple[L6, L1]: ...
@overload
def sbb1(x: L3, y: L7, b: L0) -> tuple[L6, L1]: ...
@overload
def sbb1(x: L3, y: L7, b: L1) -> tuple[L5, L1]: ...
@overload
def sbb1(x: L3, y: L8, b: L0) -> tuple[L5, L1]: ...
@overload
def sbb1(x: L3, y: L8, b: L1) -> tuple[L4, L1]: ...
@overload
def sbb1(x: L3, y: L9, b: L0) -> tuple[L4, L1]: ...
@overload
def sbb1(x: L3, y: L9, b: L1) -> tuple[L3, L1]: ...
@overload
def sbb1(x: L4, y: L0, b: L0) -> tuple[L4, L0]: ...
@overload
def sbb1(x: L4, y: L0, b: L1) -> tuple[L3, L0]: ...
@overload
def sbb1(x: L4, y: L1, b: L0) -> tuple[L3, L0]: ...
@overload
def sbb1(x: L4, y: L1, b: L1) -> tuple[L2, L0]: ...
@overload
def sbb1(x: L4, y: L2, b: L0) -> tuple[L2, L0]: ...
@overload
def sbb1(x: L4, y: L2, b: L1) -> tuple[L1, L0]: ...
@overload
def sbb1(x: L4, y: L3, b: L0) -> tuple[L1, L0]: ...
@overload
def sbb1(x: L4, y: L3, b: L1) -> tuple[L0, L0]: ...
@overload
def sbb1(x: L4, y: L4, b: L0) -> tuple[L0, L0]: ...
@overload
def sbb1(x: L4, y: L4, b: L1) -> tuple[L9, L1]: ...
@overload
def sbb1(x: L4, y: L5, b: L0) -> tuple[L9, L1]: ...
@overload
def sbb1(x: L4, y: L5, b: L1) -> tuple[L8, L1]: ...
@overload
def sbb1(x: L4, y: L6, b: L0) -> tuple[L8, L1]: ...
@overload
def sbb1(x: L4, y: L6, b: L1) -> tuple[L7, L1]: ...
@overload
def sbb1(x: L4, y: L7, b: L0) -> tuple[L7, L1]: ...
@overload
def sbb1(x: L4, y: L7, b: L1) -> tuple[L6, L1]: ...
@overload
def sbb1(x: L4, y: L8, b: L0) -> tuple[L6, L1]: ...
@overload
def sbb1(x: L4, y: L8, b: L1) -> tuple[L5, L1]: ...
@overload
def sbb1(x: L4, y: L9, b: L0) -> tuple[L5, L1]: ...
@overload
def sbb1(x: L4, y: L9, b: L1) -> tuple[L4, L1]: ...
@overload
def sbb1(x: L5, y: L0, b: L0) -> tuple[L5, L0]: ...
@overload
def sbb1(x: L5, y: L0, b: L1) -> tuple[L4, L0]: ...
@overload
def sbb1(x: L5, y: L1, b: L0) -> tuple[L4, L0]: ...
@overload
def sbb1(x: L5, y: L1, b: L1) -> tuple[L3, L0]: ...
@overload
def sbb1(x: L5, y: L2, b: L0) -> tuple[L3, L0]: ...
@overload
def sbb1(x: L5, y: L2, b: L1) -> tuple[L2, L0]: ...
@overload
def sbb1(x: L5, y: L3, b: L0) -> tuple[L2, L0]: ...
@overload
def sbb1(x: L5, y: L3, b: L1) -> tuple[L1, L0]: ...
@overload
def sbb1(x: L5, y: L4, b: L0) -> tuple[L1, L0]: ...
@overload
def sbb1(x: L5, y: L4, b: L1) -> tuple[L0, L0]: ...
@overload
def sbb1(x: L5, y: L5, b: L0) -> tuple[L0, L0]: ...
@overload
def sbb1(x: L5, y: L5, b: L1) -> tuple[L9, L1]: ...
@overload
def sbb1(x: L5, y: L6, b: L0) -> tuple[L9, L1]: ...
@overload
def sbb1(x: L5, y: L6, b: L1) -> tuple[L8, L1]: ...
@overload
def sbb1(x: L5, y: L7, b: L0) -> tuple[L8, L1]: ...
@overload
def sbb1(x: L5, y: L7, b: L1) -> tuple[L7, L1]: ...
@overload
def sbb1(x: L5, y: L8, b: L0) -> tuple[L7, L1]: ...
@overload
def sbb1(x: L5, y: L8, b: L1) -> tuple[L6, L1]: ...
@overload
def sbb1(x: L5, y: L9, b: L0) -> tuple[L6, L1]: ...
@overload
def sbb1(x: L5, y: L9, b: L1) -> tuple[L5, L1]: ...
@overload
def sbb1(x: L6, y: L0, b: L0) -> tuple[L6, L0]: ...
@overload
def sbb1(x: L6, y: L0, b: L1) -> tuple[L5, L0]: ...
@overload
def sbb1(x: L6, y: L1, b: L0) -> tuple[L5, L0]: ...
@overload
def sbb1(x: L6, y: L1, b: L1) -> tuple[L4, L0]: ...
@overload
def sbb1(x: L6, y: L2, b: L0) -> tuple[L4, L0]: ...
@overload
def sbb1(x: L6, y: L2, b: L1) -> tuple[L3, L0]: ...
@overload
def sbb1(x: L6, y: L3, b: L0) -> tuple[L3, L0]: ...
@overload
def sbb1(x: L6, y: L3, b: L1) -> tuple[L2, L0]: ...
@overload
def sbb1(x: L6, y: L4, b: L0) -> tuple[L2, L0]: ...
@overload
def sbb1(x: L6, y: L4, b: L1) -> tuple[L1, L0]: ...
@overload
def sbb1(x: L6, y: L5, b: L0) -> tuple[L1, L0]: ...
@overload
def sbb1(x: L6, y: L5, b: L1) -> tuple[L0, L0]: ...
@overload
def sbb1(x: L6, y: L6, b: L0) -> tuple[L0, L0]: ...
@overload
def sbb1(x: L6, y: L6, b: L1) -> tuple[L9, L1]: ...
@overload
def sbb1(x: L6, y: L7, b: L0) -> tuple[L9, L1]: ...
@overload
def sbb1(x: L6, y: L7, b: L1) -> tuple[L8, L1]: ...
@overload
def sbb1(x: L6, y: L8, b: L0) -> tuple[L8, L1]: ...
@overload
def sbb1(x: L6, y: L8, b: L1) -> tuple[L7, L1]: ...
@overload
def sbb1(x: L6, y: L9, b: L0) -> tuple[L7, L1]: ...
@overload
def sbb1(x: L6, y: L9, b: L1) -> tuple[L6, L1]: ...
@overload
def sbb1(x: L7, y: L0, b: L0) -> tuple[L7, L0]: ...
@overload
def sbb1(x: L7, y: L0, b: L1) -> tuple[L6, L0]: ...
@overload
def sbb1(x: L7, y: L1, b: L0) -> tuple[L6, L0]: ...
@overload
def sbb1(x: L7, y: L1, b: L1) -> tuple[L5, L0]: ...
@overload
def sbb1(x: L7, y: L2, b: L0) -> tuple[L5, L0]: ...
@overload
def sbb1(x: L7, y: L2, b: L1) -> tuple[L4, L0]: ...
@overload
def sbb1(x: L7, y: L3, b: L0) -> tuple[L4, L0]: ...
@overload
def sbb1(x: L7, y: L3, b: L1) -> tuple[L3, L0]: ...
@overload
def sbb1(x: L7, y: L4, b: L0) -> tuple[L3, L0]: ...
@overload
def sbb1(x: L7, y: L4, b: L1) -> tuple[L2, L0]: ...
@overload
def sbb1(x: L7, y: L5, b: L0) -> tuple[L2, L0]: ...
@overload
def sbb1(x: L7, y: L5, b: L1) -> tuple[L1, L0]: ...
@overload
def sbb1(x: L7, y: L6, b: L0) -> tuple[L1, L0]: ...
@overload
def sbb1(x: L7, y: L6, b: L1) -> tuple[L0, L0]: ...
@overload
def sbb1(x: L7, y: L7, b: L0) -> tuple[L0, L0]: ...
@overload
def sbb1(x: L7, y: L7, b: L1) -> tuple[L9, L1]: ...
@overload
def sbb1(x: L7, y: L8, b: L0) -> tuple[L9, L1]: ...
@overload
def sbb1(x: L7, y: L8, b: L1) -> tuple[L8, L1]: ...
@overload
def sbb1(x: L7, y: L9, b: L0) -> tuple[L8, L1]: ...
@overload
def sbb1(x: L7, y: L9, b: L1) -> tuple[L7, L1]: ...
@overload
def sbb1(x: L8, y: L0, b: L0) -> tuple[L8, L0]: ...
@overload
def sbb1(x: L8, y: L0, b: L1) -> tuple[L7, L0]: ...
@overload
def sbb1(x: L8, y: L1, b: L0) -> tuple[L7, L0]: ...
@overload
def sbb1(x: L8, y: L1, b: L1) -> tuple[L6, L0]: ...
@overload
def sbb1(x: L8, y: L2, b: L0) -> tuple[L6, L0]: ...
@overload
def sbb1(x: L8, y: L2, b: L1) -> tuple[L5, L0]: ...
@overload
def sbb1(x: L8, y: L3, b: L0) -> tuple[L5, L0]: ...
@overload
def sbb1(x: L8, y: L3, b: L1) -> tuple[L4, L0]: ...
@overload
def sbb1(x: L8, y: L4, b: L0) -> tuple[L4, L0]: ...
@overload
def sbb1(x: L8, y: L4, b: L1) -> tuple[L3, L0]: ...
@overload
def sbb1(x: L8, y: L5, b: L0) -> tuple[L3, L0]: ...
@overload
def sbb1(x: L8, y: L5, b: L1) -> tuple[L2, L0]: ...
@overload
def sbb1(x: L8, y: L6, b: L0) -> tuple[L2, L0]: ...
@overload
def sbb1(x: L8, y: L6, b: L1) -> tuple[L1, L0]: ...
@overload
def sbb1(x: L8, y: L7, b: L0) -> tuple[L1, L0]: ...
@overload
def sbb1(x: L8, y: L7, b: L1) -> tuple[L0, L0]: ...
@overload
def sbb1(x: L8, y: L8, b: L0) -> tuple[L0, L0]: ...
@overload
def sbb1(x: L8, y: L8, b: L1) -> tuple[L9, L1]: ...
@overload
def sbb1(x: L8, y: L9, b: L0) -> tuple[L9, L1]: ...
@overload
def sbb1(x: L8, y: L9, b: L1) -> tuple[L8, L1]: ...
@overload
def sbb1(x: L9, y: L0, b: L0) -> tuple[L9, L0]: ...
@overload
def sbb1(x: L9, y: L0, b: L1) -> tuple[L8, L0]: ...
@overload
def sbb1(x: L9, y: L1, b: L0) -> tuple[L8, L0]: ...
@overload
def sbb1(x: L9, y: L1, b: L1) -> tuple[L7, L0]: ...
@overload
def sbb1(x: L9, y: L2, b: L0) -> tuple[L7, L0]: ...
@overload
def sbb1(x: L9, y: L2, b: L1) -> tuple[L6, L0]: ...
@overload
def sbb1(x: L9, y: L3, b: L0) -> tuple[L6, L0]: ...
@overload
def sbb1(x: L9, y: L3, b: L1) -> tuple[L5, L0]: ...
@overload
def sbb1(x: L9, y: L4, b: L0) -> tuple[L5, L0]: ...
@overload
def sbb1(x: L9, y: L4, b: L1) -> tuple[L4, L0]: ...
@overload
def sbb1(x: L9, y: L5, b: L0) -> tuple[L4, L0]: ...
@overload
def sbb1(x: L9, y: L5, b: L1) -> tuple[L3, L0]: ...
@overload
def sbb1(x: L9, y: L6, b: L0) -> tuple[L3, L0]: ...
@overload
def sbb1(x: L9, y: L6, b: L1) -> tuple[L2, L0]: ...
@overload
def sbb1(x: L9, y: L7, b: L0) -> tuple[L2, L0]: ...
@overload
def sbb1(x: L9, y: L7, b: L1) -> tuple[L1, L0]: ...
@overload
def sbb1(x: L9, y: L8, b: L0) -> tuple[L1, L0]: ...
@overload
def sbb1(x: L9, y: L8, b: L1) -> tuple[L0, L0]: ...
@overload
def sbb1(x: L9, y: L9, b: L0) -> tuple[L0, L0]: ...
@overload
def sbb1(x: L9, y: L9, b: L1) -> tuple[L9, L1]: ...
def sbb1(x: Digit, y: Digit, b: L0 | L1) -> tuple[Digit, L0 | L1]: ...
